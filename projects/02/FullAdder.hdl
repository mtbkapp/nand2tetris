// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

 /*
 a b c sum carry
 0 0 0 0   0
 0 0 1 1   0
 0 1 0 1   0
 0 1 1 0   1
 
 1 0 0 1   0
 1 0 1 0   1 
 1 1 0 0   1
 1 1 1 1   1
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    /* my solution */
    /*
    // if a = 0
    HalfAdder(a=b, b=c, sum=sum0, carry=carry0);

    // if a = 1
    Xor(a=b, b=c, out=x);
    Not(in=x, out=sum1);
    Or(a=b, b=c, out=carry1);

    Mux(a=sum0, b=sum1, sel=a, out=sum);
    Mux(a=carry0, b=carry1, sel=a, out=carry);
    */

    /* Wikipedia's solution #1, just logic  */
    /* https://en.wikipedia.org/wiki/Adder_(electronics)#Full_adder  */
    /* Sum = A xor B xor C_in */
    Xor(a=a, b=b, out=x);
    Xor(a=x, b=c, out=sum);
    /* C_out = (A and B) or (C_in or (A xor B)) */
    And(a=a, b=b, out=and0);
    And(a=c, b=x, out=and1);
    Or(a=and0, b=and1, out=carry);


    /* Wikipedia's solution #2, 2 half adders */
    /*
    HalfAdder(a=a, b=b, sum=S, carry=carry0);
    HalfAdder(a=S, b=c, sum=sum, carry=carry1);
    Or(a=carry0, b=carry1, out=carry);
    */
}
